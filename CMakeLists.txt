cmake_minimum_required(VERSION 3.9)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

project(ExecInDllRun)

set(PROJECT_OUTPUT_DIR "${CMAKE_CURRENT_SOURCE_DIR}/target/")
set(PROJECT_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src/cpp")

if (!WIN32)
	if (${TARGET_ARCH} EQUAL 64)
		set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=native")
	else()
		# Indica que nao deve procurar bibliotecas 64 bits
		set_property(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS OFF)

		# Indica que o processador eh i686
		set(CMAKE_SYSTEM_PROCESSOR		"i686" )
		# Indica Flag de compilacao 32 bits
		set(CMAKE_CXX_FLAGS				"${CMAKE_CXX_FLAGS} -m32 -march=pentium" )
		set(CMAKE_C_FLAGS 				"${CMAKE_C_FLAGS} -m32 -march=pentium" )
		set(CMAKE_SHARED_LINKER_FLAGS	"${CMAKE_SHARED_LINKER_FLAGS} -m32 -march=pentiums")
	endif()
endif()

foreach(INDEX RANGE 1 3)
	set(PROJECT_NAME "exec${INDEX}")

	add_library("${PROJECT_NAME}" SHARED 
		"${PROJECT_SOURCE_DIR}/${PROJECT_NAME}.cpp"
		"${PROJECT_SOURCE_DIR}/exec.h"
	)
	
	set_target_properties(${PROJECT_NAME} PROPERTIES
		OUTPUT_NAME								"${PROJECT_NAME}-${TARGET_ARCH}" #"-${CMAKE_BUILD_TYPE}"
		PREFIX									""
		IMPORT_PREFIX							""
		LIBRARY_OUTPUT_DIRECTORY				${PROJECT_OUTPUT_DIR}
		LIBRARY_OUTPUT_DIRECTORY_DEBUG			${PROJECT_OUTPUT_DIR}
		LIBRARY_OUTPUT_DIRECTORY_RELEASE		${PROJECT_OUTPUT_DIR}
		LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO	${PROJECT_OUTPUT_DIR}
		RUNTIME_OUTPUT_DIRECTORY				${PROJECT_OUTPUT_DIR}
		RUNTIME_OUTPUT_DIRECTORY_DEBUG			${PROJECT_OUTPUT_DIR}
		RUNTIME_OUTPUT_DIRECTORY_RELEASE		${PROJECT_OUTPUT_DIR}
		RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${PROJECT_OUTPUT_DIR}
	)

endforeach(INDEX)



